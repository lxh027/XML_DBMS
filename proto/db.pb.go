// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.9.0
// source: db.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthResponse_Status int32

const (
	AuthResponse_OK        AuthResponse_Status = 0
	AuthResponse_Error     AuthResponse_Status = 1
	AuthResponse_Undefined AuthResponse_Status = 2
)

// Enum value maps for AuthResponse_Status.
var (
	AuthResponse_Status_name = map[int32]string{
		0: "OK",
		1: "Error",
		2: "Undefined",
	}
	AuthResponse_Status_value = map[string]int32{
		"OK":        0,
		"Error":     1,
		"Undefined": 2,
	}
)

func (x AuthResponse_Status) Enum() *AuthResponse_Status {
	p := new(AuthResponse_Status)
	*p = x
	return p
}

func (x AuthResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_db_proto_enumTypes[0].Descriptor()
}

func (AuthResponse_Status) Type() protoreflect.EnumType {
	return &file_db_proto_enumTypes[0]
}

func (x AuthResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthResponse_Status.Descriptor instead.
func (AuthResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{3, 0}
}

type SqlResult_Status int32

const (
	SqlResult_OK           SqlResult_Status = 0
	SqlResult_Syntax_Error SqlResult_Status = 1
	SqlResult_Sql_Error    SqlResult_Status = 2
	SqlResult_Undefined    SqlResult_Status = 3
)

// Enum value maps for SqlResult_Status.
var (
	SqlResult_Status_name = map[int32]string{
		0: "OK",
		1: "Syntax_Error",
		2: "Sql_Error",
		3: "Undefined",
	}
	SqlResult_Status_value = map[string]int32{
		"OK":           0,
		"Syntax_Error": 1,
		"Sql_Error":    2,
		"Undefined":    3,
	}
)

func (x SqlResult_Status) Enum() *SqlResult_Status {
	p := new(SqlResult_Status)
	*p = x
	return p
}

func (x SqlResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SqlResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_db_proto_enumTypes[1].Descriptor()
}

func (SqlResult_Status) Type() protoreflect.EnumType {
	return &file_db_proto_enumTypes[1]
}

func (x SqlResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SqlResult_Status.Descriptor instead.
func (SqlResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{5, 0}
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{0}
}

func (x *Ping) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{1}
}

func (x *Pong) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{2}
}

func (x *AuthRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  AuthResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=proto.AuthResponse_Status" json:"status,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{3}
}

func (x *AuthResponse) GetStatus() AuthResponse_Status {
	if x != nil {
		return x.Status
	}
	return AuthResponse_OK
}

func (x *AuthResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SQLExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql string `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
}

func (x *SQLExpression) Reset() {
	*x = SQLExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SQLExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SQLExpression) ProtoMessage() {}

func (x *SQLExpression) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SQLExpression.ProtoReflect.Descriptor instead.
func (*SQLExpression) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{4}
}

func (x *SQLExpression) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

type SqlResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   SqlResult_Status     `protobuf:"varint,1,opt,name=status,proto3,enum=proto.SqlResult_Status" json:"status,omitempty"`
	Message  string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MetaData []string             `protobuf:"bytes,3,rep,name=metaData,proto3" json:"metaData,omitempty"`
	Data     []*SqlResult_DataRow `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *SqlResult) Reset() {
	*x = SqlResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlResult) ProtoMessage() {}

func (x *SqlResult) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlResult.ProtoReflect.Descriptor instead.
func (*SqlResult) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{5}
}

func (x *SqlResult) GetStatus() SqlResult_Status {
	if x != nil {
		return x.Status
	}
	return SqlResult_OK
}

func (x *SqlResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SqlResult) GetMetaData() []string {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *SqlResult) GetData() []*SqlResult_DataRow {
	if x != nil {
		return x.Data
	}
	return nil
}

type SqlResult_DataRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataCell []string `protobuf:"bytes,1,rep,name=dataCell,proto3" json:"dataCell,omitempty"`
}

func (x *SqlResult_DataRow) Reset() {
	*x = SqlResult_DataRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqlResult_DataRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlResult_DataRow) ProtoMessage() {}

func (x *SqlResult_DataRow) ProtoReflect() protoreflect.Message {
	mi := &file_db_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlResult_DataRow.ProtoReflect.Descriptor instead.
func (*SqlResult_DataRow) Descriptor() ([]byte, []int) {
	return file_db_proto_rawDescGZIP(), []int{5, 0}
}

func (x *SqlResult_DataRow) GetDataCell() []string {
	if x != nil {
		return x.DataCell
	}
	return nil
}

var File_db_proto protoreflect.FileDescriptor

var file_db_proto_rawDesc = []byte{
	0x0a, 0x08, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x1a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x1a, 0x0a,
	0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x29, 0x0a, 0x0b, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x02, 0x22,
	0x21, 0x0a, 0x0d, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x71, 0x6c, 0x22, 0x89, 0x02, 0x0a, 0x09, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x71,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x6f, 0x77, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x25, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x52, 0x6f, 0x77,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x43, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x43, 0x65, 0x6c, 0x6c, 0x22, 0x40, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x74, 0x61, 0x78, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x71, 0x6c, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x03, 0x32, 0x9d,
	0x01, 0x0a, 0x08, 0x44, 0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x08, 0x54,
	0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x1a, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6e,
	0x67, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x71, 0x6c, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x51, 0x4c,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_db_proto_rawDescOnce sync.Once
	file_db_proto_rawDescData = file_db_proto_rawDesc
)

func file_db_proto_rawDescGZIP() []byte {
	file_db_proto_rawDescOnce.Do(func() {
		file_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_proto_rawDescData)
	})
	return file_db_proto_rawDescData
}

var file_db_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_db_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_db_proto_goTypes = []interface{}{
	(AuthResponse_Status)(0),  // 0: proto.AuthResponse.Status
	(SqlResult_Status)(0),     // 1: proto.SqlResult.Status
	(*Ping)(nil),              // 2: proto.Ping
	(*Pong)(nil),              // 3: proto.Pong
	(*AuthRequest)(nil),       // 4: proto.AuthRequest
	(*AuthResponse)(nil),      // 5: proto.AuthResponse
	(*SQLExpression)(nil),     // 6: proto.SQLExpression
	(*SqlResult)(nil),         // 7: proto.SqlResult
	(*SqlResult_DataRow)(nil), // 8: proto.SqlResult.DataRow
}
var file_db_proto_depIdxs = []int32{
	0, // 0: proto.AuthResponse.status:type_name -> proto.AuthResponse.Status
	1, // 1: proto.SqlResult.status:type_name -> proto.SqlResult.Status
	8, // 2: proto.SqlResult.data:type_name -> proto.SqlResult.DataRow
	2, // 3: proto.DBServer.TestConn:input_type -> proto.Ping
	4, // 4: proto.DBServer.Auth:input_type -> proto.AuthRequest
	6, // 5: proto.DBServer.SqlExecute:input_type -> proto.SQLExpression
	3, // 6: proto.DBServer.TestConn:output_type -> proto.Pong
	5, // 7: proto.DBServer.Auth:output_type -> proto.AuthResponse
	7, // 8: proto.DBServer.SqlExecute:output_type -> proto.SqlResult
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_db_proto_init() }
func file_db_proto_init() {
	if File_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SQLExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqlResult_DataRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_db_proto_goTypes,
		DependencyIndexes: file_db_proto_depIdxs,
		EnumInfos:         file_db_proto_enumTypes,
		MessageInfos:      file_db_proto_msgTypes,
	}.Build()
	File_db_proto = out.File
	file_db_proto_rawDesc = nil
	file_db_proto_goTypes = nil
	file_db_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DBServerClient is the client API for DBServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DBServerClient interface {
	TestConn(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	SqlExecute(ctx context.Context, in *SQLExpression, opts ...grpc.CallOption) (*SqlResult, error)
}

type dBServerClient struct {
	cc grpc.ClientConnInterface
}

func NewDBServerClient(cc grpc.ClientConnInterface) DBServerClient {
	return &dBServerClient{cc}
}

func (c *dBServerClient) TestConn(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/proto.DBServer/TestConn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServerClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/proto.DBServer/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServerClient) SqlExecute(ctx context.Context, in *SQLExpression, opts ...grpc.CallOption) (*SqlResult, error) {
	out := new(SqlResult)
	err := c.cc.Invoke(ctx, "/proto.DBServer/SqlExecute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DBServerServer is the server API for DBServer service.
type DBServerServer interface {
	TestConn(context.Context, *Ping) (*Pong, error)
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
	SqlExecute(context.Context, *SQLExpression) (*SqlResult, error)
}

// UnimplementedDBServerServer can be embedded to have forward compatible implementations.
type UnimplementedDBServerServer struct {
}

func (*UnimplementedDBServerServer) TestConn(context.Context, *Ping) (*Pong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestConn not implemented")
}
func (*UnimplementedDBServerServer) Auth(context.Context, *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Auth not implemented")
}
func (*UnimplementedDBServerServer) SqlExecute(context.Context, *SQLExpression) (*SqlResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SqlExecute not implemented")
}

func RegisterDBServerServer(s *grpc.Server, srv DBServerServer) {
	s.RegisterService(&_DBServer_serviceDesc, srv)
}

func _DBServer_TestConn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServerServer).TestConn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DBServer/TestConn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServerServer).TestConn(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBServer_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServerServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DBServer/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServerServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBServer_SqlExecute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SQLExpression)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServerServer).SqlExecute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DBServer/SqlExecute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServerServer).SqlExecute(ctx, req.(*SQLExpression))
	}
	return interceptor(ctx, in, info, handler)
}

var _DBServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DBServer",
	HandlerType: (*DBServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestConn",
			Handler:    _DBServer_TestConn_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _DBServer_Auth_Handler,
		},
		{
			MethodName: "SqlExecute",
			Handler:    _DBServer_SqlExecute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "db.proto",
}
